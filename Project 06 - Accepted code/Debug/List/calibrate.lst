###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           02/Nov/2015  17:54:44
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Christopher\Documents\ECE 306\Project_06\calibrate.c
#    Command line  =  
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\calibrate.c" -lC
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\Debug\List\" -o
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "D:\IAR Embedded
#        Workbench\430\lib\dlib\dl430xlsfn.h" --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        C:\Users\Christopher\Documents\ECE
#        306\Project_06\Debug\List\calibrate.lst
#    Object file   =  
#        C:\Users\Christopher\Documents\ECE
#        306\Project_06\Debug\Obj\calibrate.r43
#
###############################################################################

C:\Users\Christopher\Documents\ECE 306\Project_06\calibrate.c
      1          //******************************************************************************
      2          //
      3          //  Description: This file contains the calibration routine module
      4          //
      5          //
      6          //  Christopher Woedy
      7          //  Sept 2015
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
      9          //******************************************************************************
     10          
     11          //Points to Header files for Preprocessing
     12          #include  "msp430.h"
     13          #include  "functions.h"
     14          #include  "macros.h"
     15          

   \                                 In  segment CODE, align 2
     16          void Calibrate(void){
   \                     Calibrate:
   \   000000   0A12         PUSH.W  R10
     17          //******************************************************************************
     18          //
     19          //  Description: This file contains the calibration routine module
     20          //
     21          //
     22          //  Christopher Woedy
     23          //  Sept 2015
     24          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     25          //
     26          // Globals: blackLineLeft, blackLineRight
     27          //
     28          // Passed:
     29          //
     30          // Local: i
     31          //
     32          // Return: VOID
     33          //
     34          //****************************************************************************** 
     35          
     36          int i= TEN_ITERATIONS;
   \   000002   3A400A00     MOV.W   #0xa, R10
     37          while(i) {
   \                     ??Calibrate_0:
   \   000006   0A93         CMP.W   #0x0, R10
   \   000008   0424         JEQ     ??Calibrate_1
     38          ADC10_Process();
   \   00000A   ........     CALLA   #ADC10_Process
     39            i--;
   \   00000E   3A53         ADD.W   #0xffff, R10
   \   000010   FA3F         JMP     ??Calibrate_0
     40          }
     41            
     42          blackLineLeft = ADC_Left_Detector;
   \                     ??Calibrate_1:
   \   000012   9242........ MOV.W   &ADC_Left_Detector, &blackLineLeft
     43          blackLineRight = ADC_Right_Detector;
   \   000018   9242........ MOV.W   &ADC_Right_Detector, &blackLineRight
     44           
     45                display_1 = "Detectors";
   \   00001E   B240........ MOV.W   #`?<Constant "Detectors">`, &display_1
     46                posL1 = LINE_POS_L0;
   \   000024   C243....     MOV.B   #0x0, &posL1
     47                display_2 = "Calibrated";
   \   000028   B240........ MOV.W   #`?<Constant "Calibrated">`, &display_2
     48                posL2 = LINE_POS_L0;
   \   00002E   C243....     MOV.B   #0x0, &posL2
     49                display_3 = "Push";
   \   000032   B240........ MOV.W   #`?<Constant "Push">`, &display_3
     50                posL3 = LINE_POS_L3;
   \   000038   F2400300.... MOV.B   #0x3, &posL3
     51                display_4 =  "Select";
   \   00003E   B240........ MOV.W   #`?<Constant "Select">`, &display_4
     52                posL4 = LINE_POS_L2;
   \   000044   E243....     MOV.B   #0x2, &posL4
     53                Display_Process();
   \   000048   ........     CALLA   #Display_Process
     54            
     55          }
   \   00004C   3A41         POP.W   R10
   \   00004E   1001         RETA

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Detectors">`:
   \   000000   446574656374 DC8 "Detectors"
   \            6F727300    

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Calibrated">`:
   \   000000   43616C696272 DC8 "Calibrated"
   \            6174656400  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Push">`:
   \   000000   5075736800   DC8 "Push"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Select">`:
   \   000000   53656C656374 DC8 "Select"
   \            00          

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      6   Calibrate
        6   -> ADC10_Process
        6   -> Display_Process


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      11  ?<Constant "Calibrated">
      10  ?<Constant "Detectors">
       5  ?<Constant "Push">
       7  ?<Constant "Select">
      80  Calibrate

 
 80 bytes in segment CODE
 33 bytes in segment DATA16_C
 
 80 bytes of CODE  memory
 33 bytes of CONST memory

Errors: none
Warnings: none
