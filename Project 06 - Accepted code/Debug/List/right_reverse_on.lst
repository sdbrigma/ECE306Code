###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           02/Nov/2015  17:54:48
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Christopher\Documents\ECE 306\Project_06\right_reverse_on.c
#    Command line  =  
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\right_reverse_on.c"
#        -lC "C:\Users\Christopher\Documents\ECE 306\Project_06\Debug\List\" -o
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "D:\IAR Embedded
#        Workbench\430\lib\dlib\dl430xlsfn.h" --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        C:\Users\Christopher\Documents\ECE
#        306\Project_06\Debug\List\right_reverse_on.lst
#    Object file   =  
#        C:\Users\Christopher\Documents\ECE
#        306\Project_06\Debug\Obj\right_reverse_on.r43
#
###############################################################################

C:\Users\Christopher\Documents\ECE 306\Project_06\right_reverse_on.c
      1          //******************************************************************************
      2          //
      3          //  Description: This file turns on the right forward port
      4          //
      5          //
      6          //  Christopher Woedy
      7          //  Sept 2015
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
      9          //******************************************************************************
     10          
     11          //------------------------------------------------------------------------------
     12          
     13          //Points to Header files for Preprocessing
     14          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2
     15          #include  "functions.h"
     16          #include  "macros.h"
     17          

   \                                 In  segment CODE, align 2
     18          void Right_Reverse_On(int runRight){
   \                     Right_Reverse_On:
     19          //******************************************************************************
     20          //
     21          //  Description: This file turns on the right forward port
     22          //
     23          //
     24          //  Christopher Woedy
     25          //  Sept 2015
     26          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     27          //
     28          // Globals: Time_Sequence
     29          //
     30          // Passed: runRight
     31          //
     32          // Local: tmp
     33          //
     34          // Return: VOID
     35          //
     36          //****************************************************************************** 
     37            
     38            int tmp = runRight;
   \   000000   0F4C         MOV.W   R12, R15
     39            Time_Sequence = INITIAL;
   \   000002   8243....     MOV.W   #0x0, &Time_Sequence
     40            P3OUT &= ~R_FORWARD;
   \   000006   F2C010002202 BIC.B   #0x10, &0x222
     41              
     42              while(Time_Sequence < tmp) {
   \                     ??Right_Reverse_On_0:
   \   00000C   829F....     CMP.W   R15, &Time_Sequence
   \   000010   042C         JC      ??Right_Reverse_On_1
     43                P3OUT |= R_REVERSE;
   \   000012   F2D020002202 BIS.B   #0x20, &0x222
   \   000018   F93F         JMP     ??Right_Reverse_On_0
     44              }
     45            
     46          }
   \                     ??Right_Reverse_On_1:
   \   00001A   1001         RETA
   \   00001C                REQUIRE _A_PBOUT_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Right_Reverse_On


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      28  Right_Reverse_On
       2  _A_PBOUT_L

 
 28 bytes in segment CODE
  2 bytes in segment DATA16_AN
 
 28 bytes of CODE memory
  0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
