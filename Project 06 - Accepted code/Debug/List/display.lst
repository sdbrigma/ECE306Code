###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           02/Nov/2015  17:54:45
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\Christopher\Documents\ECE 306\Project_06\display.c
#    Command line  =  
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\display.c" -lC
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\Debug\List\" -o
#        "C:\Users\Christopher\Documents\ECE 306\Project_06\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "D:\IAR Embedded
#        Workbench\430\lib\dlib\dl430xlsfn.h" --core=430X --data_model=small
#        -On --multiplier=32 --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        C:\Users\Christopher\Documents\ECE
#        306\Project_06\Debug\List\display.lst
#    Object file   =  
#        C:\Users\Christopher\Documents\ECE
#        306\Project_06\Debug\Obj\display.r43
#
###############################################################################

C:\Users\Christopher\Documents\ECE 306\Project_06\display.c
      1          //******************************************************************************
      2          //
      3          //  Description: This file initializes the LCD display to update strings
      4          //
      5          //
      6          //  Christopher Woedy
      7          //  Sept 2015
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
      9          //******************************************************************************
     10          
     11          //------------------------------------------------------------------------------
     12          
     13          //Points to Header files for Preprocessing
     14          #include  "msp430.h"
     15          #include  "functions.h"
     16          #include  "macros.h"
     17          

   \                                 In  segment CODE, align 2
     18          void Display_Process(void){
   \                     Display_Process:
     19          //******************************************************************************
     20          //
     21          //  Description: This file initializes the LCD display to update strings
     22          //
     23          //
     24          //  Christopher Woedy
     25          //  Sept 2015
     26          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     27          //
     28          // Globals:
     29          //
     30          // Passed: display_1, display_2, display_3, display_4, LCD_HOME_L1, LCD_HOME_L2,
     31          // LCD_HOME_L3, LCD_HOME_L4, posL1, posL2, posL3, posL4
     32          //
     33          // Local:
     34          //
     35          // Return: VOID
     36          //
     37          //******************************************************************************  
     38            
     39            // Clear the display
     40            ClrDisplay();
   \   000000   ........     CALLA   #ClrDisplay
     41            
     42            //Set each line and position
     43            lcd_out(display_1, LCD_HOME_L1, posL1);
   \   000004   5E42....     MOV.B   &posL1, R14
   \   000008   7D408000     MOV.B   #0x80, R13
   \   00000C   1C42....     MOV.W   &display_1, R12
   \   000010   ........     CALLA   #lcd_out
     44            lcd_out(display_2, LCD_HOME_L2, posL2);
   \   000014   5E42....     MOV.B   &posL2, R14
   \   000018   7D40A000     MOV.B   #0xa0, R13
   \   00001C   1C42....     MOV.W   &display_2, R12
   \   000020   ........     CALLA   #lcd_out
     45            lcd_out(display_3, LCD_HOME_L3, posL3);
   \   000024   5E42....     MOV.B   &posL3, R14
   \   000028   7D40C000     MOV.B   #0xc0, R13
   \   00002C   1C42....     MOV.W   &display_3, R12
   \   000030   ........     CALLA   #lcd_out
     46            lcd_out(display_4, LCD_HOME_L4, posL4);
   \   000034   5E42....     MOV.B   &posL4, R14
   \   000038   7D40E000     MOV.B   #0xe0, R13
   \   00003C   1C42....     MOV.W   &display_4, R12
   \   000040   ........     BRA     #lcd_out
     47            
     48          }

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Display_Process
        4   -> ClrDisplay
        0   -> lcd_out
        4   -> lcd_out


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      68  Display_Process

 
 68 bytes in segment CODE
 
 68 bytes of CODE memory

Errors: none
Warnings: none
