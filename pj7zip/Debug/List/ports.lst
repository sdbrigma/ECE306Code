###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           17/Nov/2015  02:50:35
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        \\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\ports.c
#    Command line  =  
#        "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\ports.c" -lC
#        "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\Debug\List\"
#        -o "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\Debug\List\ports.lst
#    Object file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\Debug\Obj\ports.r43
#
###############################################################################

\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\ports.c
      1          //******************************************************************************
      2          //
      3          //  Description: This file contains the Ports Routine
      4          //
      5          //
      6          //  Steffon Brigman
      7          //  Nov 2015
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
      9          //******************************************************************************
     10          
     11          //------------------------------------------------------------------------------
     12          
     13          //Points to Header files for Preprocessing
     14          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x206
   \   union <unnamed> _A_PAREN_L
   \                     _A_PAREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x226
   \   union <unnamed> _A_PBREN_L
   \                     _A_PBREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x322
   \   union <unnamed> _A_PJOUT_L
   \                     _A_PJOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x324
   \   union <unnamed> _A_PJDIR_L
   \                     _A_PJDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32a
   \   union <unnamed> _A_PJSEL0_L
   \                     _A_PJSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32c
   \   union <unnamed> _A_PJSEL1_L
   \                     _A_PJSEL1_L:
   \   000000                DS8 2
     15          #include  "functions.h"
     16          #include  "macros.h"
     17          
     18          
     19          // Call port initialization for ports 1, 2, 3, 4, and J

   \                                 In  segment CODE, align 2
     20          void Init_Ports(void){
   \                     Init_Ports:
     21            
     22          //******************************************************************************
     23          //
     24          //  Description: Initializes Ports
     25          //
     26          //
     27          //  Steffon Brigman
     28          //  Nov 2015
     29          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     30          //    
     31          // Globals:
     32          // Passed: USE_R_FORWARD to clock_state in Init_Port3
     33          // Local:
     34          // Return: VOID
     35          //******************************************************************************
     36            
     37            Init_Port1();
   \   000000   ........     CALLA   #Init_Port1
     38            Init_Port2();
   \   000004   ........     CALLA   #Init_Port2
     39            Init_Port3(USE_R_FORWARD);
   \   000008   4C43         MOV.B   #0x0, R12
   \   00000A   ........     CALLA   #Init_Port3
     40            Init_Port4();
   \   00000E   ........     CALLA   #Init_Port4
     41            Init_PortJ();
   \   000012   ........     BRA     #Init_PortJ
     42          }
     43          

   \                                 In  segment CODE, align 2
     44          void Init_Port1(void) {
   \                     Init_Port1:
     45          //******************************************************************************
     46          //
     47          //  Description: Initializes Port 1
     48          //
     49          //
     50          //  Steffon Brigman
     51          //  Nov 2015
     52          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     53          //    
     54            // Globals:
     55            // Passed:
     56            // Local:
     57            // Return: VOID
     58          //******************************************************************************
     59          
     60          
     61            // Configure PORT 1
     62            // V_DETECT_R         (0x01)
     63            // V_DETECT_L         (0x02)
     64            // IR_LED             (0x04)
     65            // V_THUMB            (0x08)
     66            // SPI_CS_LCD         (0x10)
     67            // SAO_LCD            (0x20)
     68            // SPI_SIMO           (0x40)
     69            // SPI_SOMI           (0x80)
     70            
     71            // Set Port 1 Registers 
     72              
     73              P1SEL0 = CLEAR_REGISTER;
   \   000000   C2430A02     MOV.B   #0x0, &0x20a
     74              P1SEL1 = CLEAR_REGISTER;
   \   000004   C2430C02     MOV.B   #0x0, &0x20c
     75              P1DIR = CLEAR_REGISTER;
   \   000008   C2430402     MOV.B   #0x0, &0x204
     76              
     77              // V_DETECT_R Initialization
     78              P1SEL0 |= V_DETECT_R;               // P1SEL0 ->    1
   \   00000C   D2D30A02     BIS.B   #0x1, &0x20a
     79              P1SEL1 |= V_DETECT_R;               // P1SEL1 ->    1
   \   000010   D2D30C02     BIS.B   #0x1, &0x20c
     80              P1OUT &= ~V_DETECT_R;               // P1OUT ->     0
   \   000014   D2C30202     BIC.B   #0x1, &0x202
     81              P1DIR &= ~V_DETECT_R;               // P1DIR ->     0
   \   000018   D2C30402     BIC.B   #0x1, &0x204
     82              
     83              // V_DETECT_L Initialization
     84              P1SEL0 |= V_DETECT_L;               // P1SEL0 ->    1
   \   00001C   E2D30A02     BIS.B   #0x2, &0x20a
     85              P1SEL1 |= V_DETECT_L;               // P1SEL1 ->    1
   \   000020   E2D30C02     BIS.B   #0x2, &0x20c
     86              P1OUT &= ~V_DETECT_L;               // P1OUT ->     0
   \   000024   E2C30202     BIC.B   #0x2, &0x202
     87              P1DIR &= ~V_DETECT_L;               // P1DIR ->     0
   \   000028   E2C30402     BIC.B   #0x2, &0x204
     88              
     89              // IR_LED Initialization
     90              P1SEL0 &= ~IR_LED;                  // P1SEL0 ->    0
   \   00002C   E2C20A02     BIC.B   #0x4, &0x20a
     91              P1SEL1 &= ~IR_LED;                  // P1SEL1 ->    0
   \   000030   E2C20C02     BIC.B   #0x4, &0x20c
     92              P1OUT &= ~IR_LED;                    // P1OUT ->    0
   \   000034   E2C20202     BIC.B   #0x4, &0x202
     93              P1DIR |= IR_LED;                    // P1DIR ->     1
   \   000038   E2D20402     BIS.B   #0x4, &0x204
     94              
     95              // V_THUMB Initialization
     96              P1SEL0 |= V_THUMB;                  // P1SEL0 ->    1
   \   00003C   F2D20A02     BIS.B   #0x8, &0x20a
     97              P1SEL1 |= V_THUMB;                  // P1SEL1 ->    1
   \   000040   F2D20C02     BIS.B   #0x8, &0x20c
     98              P1OUT &= ~V_THUMB;                  // P1OUT ->     0
   \   000044   F2C20202     BIC.B   #0x8, &0x202
     99              P1DIR &= ~V_THUMB;                  // P1DIR ->     0
   \   000048   F2C20402     BIC.B   #0x8, &0x204
    100              
    101              // SPI_CS_LCD Initialization
    102              P1SEL0 &= ~SPI_CS_LCD;              // P1SEL0 ->    0
   \   00004C   F2C010000A02 BIC.B   #0x10, &0x20a
    103              P1SEL1 &= ~SPI_CS_LCD;              // P1SEL1 ->    0
   \   000052   F2C010000C02 BIC.B   #0x10, &0x20c
    104              P1OUT |= SPI_CS_LCD;                // P1OUT ->     1
   \   000058   F2D010000202 BIS.B   #0x10, &0x202
    105              P1DIR |= SPI_CS_LCD;                // P1DIR ->     1
   \   00005E   F2D010000402 BIS.B   #0x10, &0x204
    106              
    107              P1SEL0 &= ~SA0_LCD;                 // P1SEL0 ->    0
   \   000064   F2C020000A02 BIC.B   #0x20, &0x20a
    108              P1SEL1 &= ~SA0_LCD;                 // P1SEL1 ->    0
   \   00006A   F2C020000C02 BIC.B   #0x20, &0x20c
    109              P1OUT &=  ~SA0_LCD;                 // P1OUT ->     0
   \   000070   F2C020000202 BIC.B   #0x20, &0x202
    110              P1DIR |= SA0_LCD;                   // P1DIR ->     1
   \   000076   F2D020000402 BIS.B   #0x20, &0x204
    111              
    112              P1SEL0 &= ~SPI_SIMO;                // P1SEL0 ->    0
   \   00007C   F2C040000A02 BIC.B   #0x40, &0x20a
    113              P1SEL1 |= SPI_SIMO;                 // P1SEL1 ->    1
   \   000082   F2D040000C02 BIS.B   #0x40, &0x20c
    114              P1OUT &= ~SPI_SIMO;                 // P1OUT ->     0
   \   000088   F2C040000202 BIC.B   #0x40, &0x202
    115              P1DIR |= SPI_SIMO;                  // P1DIR ->     1
   \   00008E   F2D040000402 BIS.B   #0x40, &0x204
    116              
    117              P1SEL0 &= ~SPI_SOMI;                // P1SEL0 ->    0
   \   000094   F2C080000A02 BIC.B   #0x80, &0x20a
    118              P1SEL1 |= SPI_SOMI;                 // P1SEL1 ->    1
   \   00009A   F2D080000C02 BIS.B   #0x80, &0x20c
    119              P1OUT &= ~SPI_SOMI;                 // P1OUT ->     0
   \   0000A0   F2C080000202 BIC.B   #0x80, &0x202
    120              P1DIR &= ~SPI_SOMI;                 // P1DIR ->     0
   \   0000A6   F2C080000402 BIC.B   #0x80, &0x204
    121              P1REN |= SPI_SOMI;                  // P1REN ->     1
   \   0000AC   F2D080000602 BIS.B   #0x80, &0x206
    122            }
   \   0000B2   1001         RETA
   \   0000B4                REQUIRE _A_PASEL0_L
   \   0000B4                REQUIRE _A_PASEL1_L
   \   0000B4                REQUIRE _A_PADIR_L
   \   0000B4                REQUIRE _A_PAOUT_L
   \   0000B4                REQUIRE _A_PAREN_L
    123          

   \                                 In  segment CODE, align 2
    124          void Init_Port2(void) {
   \                     Init_Port2:
    125            //******************************************************************************
    126          //
    127          //  Description: Initializes Port 2
    128          //
    129          //
    130          //  Steffon Brigman
    131          //  Nov 2015
    132          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
    133          //    
    134          // Globals:
    135          // Passed:
    136          // Local:
    137          // Return: VOID
    138          //******************************************************************************
    139            
    140            // Configure PORT2
    141            // USB_TXD
    142            // USB_RXD
    143            // SPI_SCK
    144            // P2PIN3
    145            // P2PIN4
    146            // CPU_TXD
    147            // CPU_RXD
    148            // P2PIN7
    149            
    150            // Set Port 2 Registers 
    151              P2SEL0 = CLEAR_REGISTER;               
   \   000000   C2430B02     MOV.B   #0x0, &0x20b
    152              P2SEL1 = CLEAR_REGISTER;
   \   000004   C2430D02     MOV.B   #0x0, &0x20d
    153              P2OUT = CLEAR_REGISTER;
   \   000008   C2430302     MOV.B   #0x0, &0x203
    154              P2DIR = CLEAR_REGISTER;
   \   00000C   C2430502     MOV.B   #0x0, &0x205
    155              
    156            // USB_TXD Initialization
    157            P2SEL0 &= ~USB_TXD;                   // P2SEL0 ->    0
   \   000010   D2C30B02     BIC.B   #0x1, &0x20b
    158            P2SEL1 |= USB_TXD;                    // P2SEL1 ->    1
   \   000014   D2D30D02     BIS.B   #0x1, &0x20d
    159            P2OUT &= ~USB_TXD;                    // P2OUT ->     0
   \   000018   D2C30302     BIC.B   #0x1, &0x203
    160            P2DIR |= USB_TXD;                     // P2DIR ->     1
   \   00001C   D2D30502     BIS.B   #0x1, &0x205
    161            
    162            // USB_RXD Initialization
    163            P2SEL0 &= ~USB_RXD;                   // P2SEL0 ->    0
   \   000020   E2C30B02     BIC.B   #0x2, &0x20b
    164            P2SEL1 |= USB_RXD;                    // P2SEL1 ->    1
   \   000024   E2D30D02     BIS.B   #0x2, &0x20d
    165            P2OUT &= ~USB_RXD;                    // P2OUT ->     0
   \   000028   E2C30302     BIC.B   #0x2, &0x203
    166            P2DIR  &= ~USB_RXD;                   // P2DIR ->     0
   \   00002C   E2C30502     BIC.B   #0x2, &0x205
    167            
    168            // SPI_SCK Initialization
    169            P2SEL0 &= ~SPI_SCK;                   // P2SEL0 ->    0
   \   000030   E2C20B02     BIC.B   #0x4, &0x20b
    170            P2SEL1 |= SPI_SCK;                    // P2SEL1 ->    1
   \   000034   E2D20D02     BIS.B   #0x4, &0x20d
    171            P2OUT |= SPI_SCK;                     // P2OUT ->     1
   \   000038   E2D20302     BIS.B   #0x4, &0x203
    172            P2DIR |= SPI_SCK;                     // P2DIR ->     1
   \   00003C   E2D20502     BIS.B   #0x4, &0x205
    173            
    174            // P2PIN3 Initialization
    175            P2SEL0 &= ~P2PIN3;                    // P2SEL0 ->    0
   \   000040   F2C20B02     BIC.B   #0x8, &0x20b
    176            P2SEL1 &= ~P2PIN3;                    // P2SEL1 ->    0
   \   000044   F2C20D02     BIC.B   #0x8, &0x20d
    177            P2OUT &= ~P2PIN3;                     // P2OUT ->     0
   \   000048   F2C20302     BIC.B   #0x8, &0x203
    178            P2DIR |= P2PIN3;                      // P2DIR ->     1
   \   00004C   F2D20502     BIS.B   #0x8, &0x205
    179            P2REN &= ~P2PIN3;                     // P2REN ->     0
   \   000050   F2C20702     BIC.B   #0x8, &0x207
    180              
    181            // P2PIN4 Initialization
    182            P2SEL0 &= ~P2PIN4;                    // P2SEL0 ->    0
   \   000054   F2C010000B02 BIC.B   #0x10, &0x20b
    183            P2SEL1 &= ~P2PIN4;                    // P2SEL1 ->    0
   \   00005A   F2C010000D02 BIC.B   #0x10, &0x20d
    184            P2OUT &= ~P2PIN4;                     // P2OUT ->     0
   \   000060   F2C010000302 BIC.B   #0x10, &0x203
    185            P2DIR |= P2PIN4;                      // P2DIR ->     1
   \   000066   F2D010000502 BIS.B   #0x10, &0x205
    186            P2REN &= ~P2PIN4;                     // P2REN ->     0
   \   00006C   F2C010000702 BIC.B   #0x10, &0x207
    187              
    188            // CPU_TXD Initialization
    189            P2SEL0 &= ~CPU_TXD;                   // P2SEL0 ->    0
   \   000072   F2C020000B02 BIC.B   #0x20, &0x20b
    190            P2SEL1 |= CPU_TXD;                    // P2SEL1 ->    1
   \   000078   F2D020000D02 BIS.B   #0x20, &0x20d
    191            P2OUT &= ~CPU_TXD;                    // P2OUT ->     0
   \   00007E   F2C020000302 BIC.B   #0x20, &0x203
    192            P2DIR |= CPU_TXD;                     // P2DIR ->     1
   \   000084   F2D020000502 BIS.B   #0x20, &0x205
    193            
    194            // CPU_RXD Initialization
    195            P2SEL0 &= ~CPU_RXD;                   // P2SEL0 ->    0
   \   00008A   F2C040000B02 BIC.B   #0x40, &0x20b
    196            P2SEL1 |= CPU_RXD;                    // P2SEL1 ->    1
   \   000090   F2D040000D02 BIS.B   #0x40, &0x20d
    197            P2OUT &= ~CPU_RXD;                    // P2OUT ->     0
   \   000096   F2C040000302 BIC.B   #0x40, &0x203
    198            P2DIR  &= ~CPU_RXD;                   // P2DIR ->     0
   \   00009C   F2C040000502 BIC.B   #0x40, &0x205
    199            
    200            // P2PIN7 Initialization
    201            P2SEL0 &= ~P2PIN7;                    // P2SEL0 ->    0
   \   0000A2   F2C080000B02 BIC.B   #0x80, &0x20b
    202            P2SEL1 &= ~P2PIN7;                    // P2SEL1 ->    0
   \   0000A8   F2C080000D02 BIC.B   #0x80, &0x20d
    203            P2OUT &= ~P2PIN7;                     // P2OUT ->     0
   \   0000AE   F2C080000302 BIC.B   #0x80, &0x203
    204            P2DIR |= P2PIN7;                      // P2DIR ->     1
   \   0000B4   F2D080000502 BIS.B   #0x80, &0x205
    205            P2REN &= ~P2PIN7;                     // P2REN ->     0
   \   0000BA   F2C080000702 BIC.B   #0x80, &0x207
    206            
    207          }
   \   0000C0   1001         RETA
   \   0000C2                REQUIRE _A_PASEL0_L
   \   0000C2                REQUIRE _A_PASEL1_L
   \   0000C2                REQUIRE _A_PAOUT_L
   \   0000C2                REQUIRE _A_PADIR_L
   \   0000C2                REQUIRE _A_PAREN_L
    208          

   \                                 In  segment CODE, align 2
    209          void Init_Port3(char clock_state) {
   \                     Init_Port3:
    210            
    211            //******************************************************************************
    212          //
    213          //  Description: Initializes Port 3
    214          //
    215          //
    216          //  Steffon Brigman
    217          //  Nov 2015
    218          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
    219          //    
    220          // Globals:
    221          // Passed: clock_state
    222          // Local:
    223          // Return: VOID
    224          //******************************************************************************
    225          
    226            
    227            // Configure PORT 3
    228            // X
    229            // Y
    230            // Z
    231            // LCD_BACKLITE
    232            // R_FORWARD
    233            // R_REVERSE
    234            // L_FORWARD
    235            // L_REVERSE
    236            
    237            // Set Port 3 Registers 
    238              P3SEL0 = CLEAR_REGISTER;               
   \   000000   C2432A02     MOV.B   #0x0, &0x22a
    239              P3SEL1 = CLEAR_REGISTER;
   \   000004   C2432C02     MOV.B   #0x0, &0x22c
    240              P3OUT = CLEAR_REGISTER;
   \   000008   C2432202     MOV.B   #0x0, &0x222
    241              P3DIR = CLEAR_REGISTER;
   \   00000C   C2432402     MOV.B   #0x0, &0x224
    242              
    243            // P3X Initialization
    244            P3SEL0 &= ~P3X;                       // P3SEL0 ->    0
   \   000010   D2C32A02     BIC.B   #0x1, &0x22a
    245            P3SEL1 &= ~P3X;                       // P3SEL1 ->    0
   \   000014   D2C32C02     BIC.B   #0x1, &0x22c
    246            P3OUT &= ~P3X;                        // P3OUT ->     0
   \   000018   D2C32202     BIC.B   #0x1, &0x222
    247            P3DIR &= ~P3X;                        // P3DIR ->     0
   \   00001C   D2C32402     BIC.B   #0x1, &0x224
    248            P3REN &= ~P3X;                        // P3REN ->     0
   \   000020   D2C32602     BIC.B   #0x1, &0x226
    249            
    250            // P3Y Initialization
    251            P3SEL0 &= ~P3Y;                       // P3SEL0 ->    0
   \   000024   E2C32A02     BIC.B   #0x2, &0x22a
    252            P3SEL1 &= ~P3Y;                       // P3SEL1 ->    0
   \   000028   E2C32C02     BIC.B   #0x2, &0x22c
    253            P3OUT &= ~P3Y;                        // P3OUT ->     0
   \   00002C   E2C32202     BIC.B   #0x2, &0x222
    254            P3DIR &= ~P3Y;                        // P3DIR ->     0
   \   000030   E2C32402     BIC.B   #0x2, &0x224
    255            P3REN &= ~P3Y;                        // P3REN ->     0
   \   000034   E2C32602     BIC.B   #0x2, &0x226
    256            
    257            // Z Initialization
    258            P3SEL0 &= ~P3Z;                       // P3SEL0 ->    0
   \   000038   E2C22A02     BIC.B   #0x4, &0x22a
    259            P3SEL1 &= ~P3Z;                       // P3SEL1 ->    0
   \   00003C   E2C22C02     BIC.B   #0x4, &0x22c
    260            P3OUT &= ~P3Z;                        // P3OUT ->     0
   \   000040   E2C22202     BIC.B   #0x4, &0x222
    261            P3DIR &= ~P3Z;                        // P3DIR ->     0
   \   000044   E2C22402     BIC.B   #0x4, &0x224
    262            P3REN &= ~P3Z;                        // P3REN ->     0
   \   000048   E2C22602     BIC.B   #0x4, &0x226
    263            
    264            // LCD_BACKLITE Initialization
    265            P3SEL0 &= ~LCD_BACKLITE;              // P3SEL0 ->    0
   \   00004C   F2C22A02     BIC.B   #0x8, &0x22a
    266            P3SEL1 &= ~LCD_BACKLITE;              // P3SEL1 ->    0
   \   000050   F2C22C02     BIC.B   #0x8, &0x22c
    267            P3OUT |= LCD_BACKLITE;                // P3OUT ->     1
   \   000054   F2D22202     BIS.B   #0x8, &0x222
    268            P3DIR |= LCD_BACKLITE;                // P3DIR ->     1
   \   000058   F2D22402     BIS.B   #0x8, &0x224
    269            
    270            if (clock_state == USE_R_FORWARD) {
   \   00005C   4C93         CMP.B   #0x0, R12
   \   00005E   0D20         JNE     ??Init_Port3_0
    271            // R_FORWARD
    272            P3SEL0 &= ~R_FORWARD;
   \   000060   F2C010002A02 BIC.B   #0x10, &0x22a
    273            P3SEL1 &= ~R_FORWARD;
   \   000066   F2C010002C02 BIC.B   #0x10, &0x22c
    274            P3OUT &= ~R_FORWARD;
   \   00006C   F2C010002202 BIC.B   #0x10, &0x222
    275            P3DIR |= R_FORWARD;
   \   000072   F2D010002402 BIS.B   #0x10, &0x224
   \   000078   0C3C         JMP     ??Init_Port3_1
    276            }
    277            else {
    278            P3SEL0 |= SET_SMCLK;
   \                     ??Init_Port3_0:
   \   00007A   F2D010002A02 BIS.B   #0x10, &0x22a
    279            P3SEL1 |= SET_SMCLK;
   \   000080   F2D010002C02 BIS.B   #0x10, &0x22c
    280            P3OUT |= SET_SMCLK;
   \   000086   F2D010002202 BIS.B   #0x10, &0x222
    281            P3DIR |= SET_SMCLK;
   \   00008C   F2D010002402 BIS.B   #0x10, &0x224
    282            }
    283            // R_REVERSE
    284            P3SEL0 &= ~R_REVERSE;
   \                     ??Init_Port3_1:
   \   000092   F2C020002A02 BIC.B   #0x20, &0x22a
    285            P3SEL1 &= ~R_REVERSE;
   \   000098   F2C020002C02 BIC.B   #0x20, &0x22c
    286            P3OUT &= ~R_REVERSE;
   \   00009E   F2C020002202 BIC.B   #0x20, &0x222
    287            P3DIR |= R_REVERSE;
   \   0000A4   F2D020002402 BIS.B   #0x20, &0x224
    288            
    289            // L_FORWARD
    290            P3SEL0 &= ~L_FORWARD;
   \   0000AA   F2C040002A02 BIC.B   #0x40, &0x22a
    291            P3SEL1 &= ~L_FORWARD;
   \   0000B0   F2C040002C02 BIC.B   #0x40, &0x22c
    292            P3OUT &= ~L_FORWARD;
   \   0000B6   F2C040002202 BIC.B   #0x40, &0x222
    293            P3DIR |= L_FORWARD;
   \   0000BC   F2D040002402 BIS.B   #0x40, &0x224
    294            
    295            // L_REVERSE
    296            P3SEL0 &= ~L_REVERSE;
   \   0000C2   F2C080002A02 BIC.B   #0x80, &0x22a
    297            P3SEL1 &= ~L_REVERSE;
   \   0000C8   F2C080002C02 BIC.B   #0x80, &0x22c
    298            P3OUT &= ~L_REVERSE;
   \   0000CE   F2C080002202 BIC.B   #0x80, &0x222
    299            P3DIR |= L_REVERSE;
   \   0000D4   F2D080002402 BIS.B   #0x80, &0x224
    300            
    301          }
   \   0000DA   1001         RETA
   \   0000DC                REQUIRE _A_PBSEL0_L
   \   0000DC                REQUIRE _A_PBSEL1_L
   \   0000DC                REQUIRE _A_PBOUT_L
   \   0000DC                REQUIRE _A_PBDIR_L
   \   0000DC                REQUIRE _A_PBREN_L
    302          

   \                                 In  segment CODE, align 2
    303          void Init_Port4(void) {
   \                     Init_Port4:
    304            
    305          //******************************************************************************
    306          //
    307          //  Description: Initializes Port 4
    308          //
    309          //
    310          //  Steffon Brigman
    311          //  Nov 2015
    312          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
    313          //    
    314            // Globals:
    315            // Passed:
    316            // Local:
    317            // Return: VOID
    318          //******************************************************************************
    319            
    320            // Configure PORT 4
    321            // SW1                (0x01)
    322            // SW2                (0x02)
    323            
    324            // Set Port 4 Registers 
    325              P4SEL0 = CLEAR_REGISTER;
   \   000000   C2432B02     MOV.B   #0x0, &0x22b
    326              P4SEL1 = CLEAR_REGISTER;
   \   000004   C2432D02     MOV.B   #0x0, &0x22d
    327              P4OUT = CLEAR_REGISTER;
   \   000008   C2432302     MOV.B   #0x0, &0x223
    328              P4DIR = CLEAR_REGISTER;
   \   00000C   C2432502     MOV.B   #0x0, &0x225
    329          
    330            // SW1 Initialization
    331            P4SEL0 &= ~SW1;               // SW1 set as I/O
   \   000010   D2C32B02     BIC.B   #0x1, &0x22b
    332            P4SEL1 &= ~SW1;               // SW1 set as I/O
   \   000014   D2C32D02     BIC.B   #0x1, &0x22d
    333            P4OUT |= SW1;                 // Configures SW1 for pullup resistor operation
   \   000018   D2D32302     BIS.B   #0x1, &0x223
    334            P4DIR &= ~SW1;                // Direction set as input
   \   00001C   D2C32502     BIC.B   #0x1, &0x225
    335            P4REN |= SW1;                 // Enables Pull-up Resistor
   \   000020   D2D32702     BIS.B   #0x1, &0x227
    336            //P4IES |= SW1;               // SW1 Hi/Lo Edge Interrupt 
    337            
    338            // SW2 Initialization
    339            P4SEL0 &= ~SW2;               // SW2 set as I/O
   \   000024   E2C32B02     BIC.B   #0x2, &0x22b
    340            P4SEL1 &= ~SW2;               // SW2 set as I/O
   \   000028   E2C32D02     BIC.B   #0x2, &0x22d
    341            P4OUT |= SW2;                 // Configures SW1 for pullup resistor operation
   \   00002C   E2D32302     BIS.B   #0x2, &0x223
    342            P4DIR &= ~SW2;                // Direction set as input
   \   000030   E2C32502     BIC.B   #0x2, &0x225
    343            P4REN |= SW2;                 // Enables Pull-up Resistor
   \   000034   E2D32702     BIS.B   #0x2, &0x227
    344            //P4IES |= SW2;               // SW2 Hi/Lo Edge Interrupt 
    345            
    346          }
   \   000038   1001         RETA
   \   00003A                REQUIRE _A_PBSEL0_L
   \   00003A                REQUIRE _A_PBSEL1_L
   \   00003A                REQUIRE _A_PBOUT_L
   \   00003A                REQUIRE _A_PBDIR_L
   \   00003A                REQUIRE _A_PBREN_L
    347          

   \                                 In  segment CODE, align 2
    348          void Init_PortJ(void) {
   \                     Init_PortJ:
    349          
    350          //******************************************************************************
    351          //
    352          //  Description: Initializes Port J
    353          //
    354          //
    355          //  Steffon Brigman
    356          //  Nov 2015
    357          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
    358          //    
    359          // Globals:
    360          // Passed:
    361          // Local:
    362          // Return: VOID
    363          //******************************************************************************
    364          
    365            // Configure PORT J
    366            // IOT_FACTORY
    367            // IOT_WAKEUP
    368            // IOT_STA_MINIAP
    369            // RESET
    370            
    371            // Set Port J Registers 
    372            PJSEL0 = CLEAR_REGISTER;
   \   000000   82432A03     MOV.W   #0x0, &0x32a
    373            PJSEL1 = CLEAR_REGISTER;
   \   000004   82432C03     MOV.W   #0x0, &0x32c
    374            PJOUT = CLEAR_REGISTER;
   \   000008   82432203     MOV.W   #0x0, &0x322
    375            PJDIR = CLEAR_REGISTER;
   \   00000C   82432403     MOV.W   #0x0, &0x324
    376              
    377            PJSEL0 &= ~IOT_FACTORY;
   \   000010   92C32A03     BIC.W   #0x1, &0x32a
    378            PJSEL1 &= ~IOT_FACTORY;
   \   000014   92C32C03     BIC.W   #0x1, &0x32c
    379            PJOUT &= ~IOT_FACTORY;
   \   000018   92C32203     BIC.W   #0x1, &0x322
    380            PJDIR |= IOT_FACTORY;
   \   00001C   92D32403     BIS.W   #0x1, &0x324
    381          
    382            PJSEL0 &= ~IOT_WAKEUP;
   \   000020   A2C32A03     BIC.W   #0x2, &0x32a
    383            PJSEL1 &= ~IOT_WAKEUP;
   \   000024   A2C32C03     BIC.W   #0x2, &0x32c
    384            PJOUT |= IOT_WAKEUP;
   \   000028   A2D32203     BIS.W   #0x2, &0x322
    385            PJDIR |= IOT_WAKEUP;
   \   00002C   A2D32403     BIS.W   #0x2, &0x324
    386            
    387            PJSEL0 &= ~IOT_STA_MINIAP;
   \   000030   A2C22A03     BIC.W   #0x4, &0x32a
    388            PJSEL1 &= ~IOT_STA_MINIAP;
   \   000034   A2C22C03     BIC.W   #0x4, &0x32c
    389            PJOUT |= IOT_STA_MINIAP;
   \   000038   A2D22203     BIS.W   #0x4, &0x322
    390            PJDIR |= IOT_STA_MINIAP;
   \   00003C   A2D22403     BIS.W   #0x4, &0x324
    391            
    392            PJSEL0 &= ~RESET;
   \   000040   B2C22A03     BIC.W   #0x8, &0x32a
    393            PJSEL1 &= ~RESET;
   \   000044   B2C22C03     BIC.W   #0x8, &0x32c
    394            PJOUT &= ~RESET;
   \   000048   B2C22203     BIC.W   #0x8, &0x322
    395            PJDIR |= RESET;
   \   00004C   B2D22403     BIS.W   #0x8, &0x324
    396            
    397            PJSEL0 |= XINR;
   \   000050   B2D010002A03 BIS.W   #0x10, &0x32a
    398            PJSEL0 |= XOUTR;
   \   000056   B2D020002A03 BIS.W   #0x20, &0x32a
    399            
    400          }
   \   00005C   1001         RETA
   \   00005E                REQUIRE _A_PJSEL0_L
   \   00005E                REQUIRE _A_PJSEL1_L
   \   00005E                REQUIRE _A_PJOUT_L
   \   00005E                REQUIRE _A_PJDIR_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_PortJ
      4   Init_Ports
        4   -> Init_Port1
        4   -> Init_Port2
        4   -> Init_Port3
        4   -> Init_Port4
        0   -> Init_PortJ


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     180  Init_Port1
     194  Init_Port2
     220  Init_Port3
      58  Init_Port4
      94  Init_PortJ
      22  Init_Ports
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PAREN_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBOUT_L
       2  _A_PBREN_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PJDIR_L
       2  _A_PJOUT_L
       2  _A_PJSEL0_L
       2  _A_PJSEL1_L

 
 768 bytes in segment CODE
  28 bytes in segment DATA16_AN
 
 768 bytes of CODE memory
   0 bytes of DATA memory (+ 28 bytes shared)

Errors: none
Warnings: none
