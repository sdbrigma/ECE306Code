###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           17/Nov/2015  02:50:24
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\five_msec_delay.c
#    Command line  =  
#        "\\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\five_msec_delay.c" -lC
#        "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\Debug\List\"
#        -o "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\Debug\List\five_msec_delay.lst
#    Object file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\Debug\Obj\five_msec_delay.r43
#
###############################################################################

\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\five_msec_delay.c
      1          //******************************************************************************
      2          //
      3          //  Description: This file contains the five_msec_delay routine
      4          //
      5          //
      6          //  Steffon Brigman
      7          //  Sept 2015
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
      9          //******************************************************************************
     10          
     11          //Points to Header files for Preprocessing
     12          #include  "msp430.h"
     13          #include  "functions.h"
     14          #include  "macros.h"
     15          

   \                                 In  segment CODE, align 2
     16          void Five_msec_Delay(unsigned int delay_multiplyer){
   \                     Five_msec_Delay:
     17          //******************************************************************************
     18          //
     19          //  Description: This file contains the five_msec_delay routine
     20          //
     21          //
     22          //  Steffon Brigman
     23          //  Sept 2015
     24          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     25          //
     26          // Globals: A0_time_count
     27          //
     28          // Passed: delay_multiplyer
     29          //
     30          // Local:
     31          //
     32          // Return: VOID
     33          //
     34          //****************************************************************************** 
     35            
     36            A0_time_count = INITIAL;
   \   000000   8243....     MOV.W   #0x0, &A0_time_count
     37            while(A0_time_count <= (FIVE_MSEC*delay_multiplyer));
   \                     ??Five_msec_Delay_0:
   \   000004   0F4C         MOV.W   R12, R15
   \   000006   0E4F         MOV.W   R15, R14
   \   000008   5F06         RLAM.W  #0x2, R15
   \   00000A   0F5E         ADD.W   R14, R15
   \   00000C   1F92....     CMP.W   &A0_time_count, R15
   \   000010   F92F         JC      ??Five_msec_Delay_0
     38            A0_time_count = INITIAL;
   \   000012   8243....     MOV.W   #0x0, &A0_time_count
     39                  
     40          //------------------------------------------------------------------------------
     41          }
   \   000016   1001         RETA

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Five_msec_Delay


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      24  Five_msec_Delay

 
 24 bytes in segment CODE
 
 24 bytes of CODE memory

Errors: none
Warnings: none
