###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           17/Nov/2015  02:50:36
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\right_forward_off.c
#    Command line  =  
#        "\\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\right_forward_off.c" -lC
#        "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\Debug\List\"
#        -o "\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\Debug\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\Debug\List\right_forward_off.lst
#    Object file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\pj7zip\Debug\Obj\right_forward_off.r43
#
###############################################################################

\\vmware-host\Shared Folders\Desktop\ECE306Code\pj7zip\right_forward_off.c
      1          //******************************************************************************
      2          //
      3          //  Description: This file turns off the right forward port
      4          //
      5          //
      6          //  Steffon Brigman
      7          //  Sept 2015
      8          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
      9          //******************************************************************************
     10          
     11          //------------------------------------------------------------------------------
     12          
     13          //Points to Header files for Preprocessing
     14          #include  "msp430.h"

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2
     15          #include  "functions.h"
     16          #include  "macros.h"
     17          

   \                                 In  segment CODE, align 2
     18          void Right_Forward_Off(void){
   \                     Right_Forward_Off:
     19          //******************************************************************************
     20          //
     21          //  Description: This file turns off the right forward port
     22          //
     23          //
     24          //  Steffon Brigman
     25          //  Sept 2015
     26          //  Built with IAR Embedded Workbench Version: V4.10A/W32 (6.30.3)
     27          //
     28          // Globals: Time_Sequence
     29          //
     30          // Passed: 
     31          //
     32          // Local: tmp
     33          //
     34          // Return: VOID
     35          //
     36          //****************************************************************************** 
     37            
     38            P3OUT &= ~R_FORWARD;
   \   000000   F2C010002202 BIC.B   #0x10, &0x222
     39            
     40          }
   \   000006   1001         RETA
   \   000008                REQUIRE _A_PBOUT_L

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Right_Forward_Off


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       8  Right_Forward_Off
       2  _A_PBOUT_L

 
 8 bytes in segment CODE
 2 bytes in segment DATA16_AN
 
 8 bytes of CODE memory
 0 bytes of DATA memory (+ 2 bytes shared)

Errors: none
Warnings: none
