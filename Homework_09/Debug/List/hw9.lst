###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           13/Nov/2015  15:42:33
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        \\vmware-host\Shared Folders\Desktop\ECE306Code\Homework_09\hw9.c
#    Command line  =  
#        "\\vmware-host\Shared Folders\Desktop\ECE306Code\Homework_09\hw9.c"
#        -lC "\\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\List\" -o
#        "\\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\List\hw9.lst
#    Object file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\Obj\hw9.r43
#
###############################################################################

\\vmware-host\Shared Folders\Desktop\ECE306Code\Homework_09\hw9.c
      1          // Includes
      2          #include  "macros.h"
      3          #include  "msp430.h"
      4          #include  "functions.h"
      5          

   \                                 In  segment CODE, align 2
      6          void getResistorMenu(unsigned int adc_value){
   \                     getResistorMenu:
   \   000000   0A12         PUSH.W  R10
   \   000002   0A4C         MOV.W   R12, R10
      7            adc_value = adc_value >> 6; // shift 10 bit value by 6 bits
   \   000004                RPT     #0x6
   \   000004   45190A10     RRUX.W  R10
      8            switch(adc_value){
   \   000008   0F4A         MOV.W   R10, R15
   \   00000A   1F83         SUB.W   #0x1, R15
   \   00000C   1324         JEQ     ??getResistorMenu_0
   \   00000E   1F83         SUB.W   #0x1, R15
   \   000010   2B24         JEQ     ??getResistorMenu_1
   \   000012   1F83         SUB.W   #0x1, R15
   \   000014   4324         JEQ     ??getResistorMenu_2
   \   000016   1F83         SUB.W   #0x1, R15
   \   000018   5A24         JEQ     ??getResistorMenu_3
   \   00001A   1F83         SUB.W   #0x1, R15
   \   00001C   7124         JEQ     ??getResistorMenu_4
   \   00001E   1F83         SUB.W   #0x1, R15
   \   000020   8824         JEQ     ??getResistorMenu_5
   \   000022   1F83         SUB.W   #0x1, R15
   \   000024   A024         JEQ     ??getResistorMenu_6
   \   000026   1F83         SUB.W   #0x1, R15
   \   000028   B824         JEQ     ??getResistorMenu_7
   \   00002A   1F83         SUB.W   #0x1, R15
   \   00002C   CF24         JEQ     ??getResistorMenu_8
   \   00002E   1F83         SUB.W   #0x1, R15
   \   000030   E724         JEQ     ??getResistorMenu_9
   \   000032   003D         JMP     ??getResistorMenu_10
      9            case MENU1:
     10              display_1 = "Color";
   \                     ??getResistorMenu_0:
   \   000034   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     11              posL1 = LINE_POS_L3;
   \   00003A   F2400300.... MOV.B   #0x3, &posL1
     12              display_3 = "Value";
   \   000040   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     13              posL3 = LINE_POS_L3;
   \   000046   F2400300.... MOV.B   #0x3, &posL3
     14              display_2 = "Black";
   \   00004C   B240........ MOV.W   #`?<Constant "Black">`, &display_2
     15              posL2 = LINE_POS_L3;
   \   000052   F2400300.... MOV.B   #0x3, &posL2
     16              display_4 = "0";
   \   000058   B240........ MOV.W   #`?<Constant "0">`, &display_4
     17              posL4 = LINE_POS_L5;
   \   00005E   F2400500.... MOV.B   #0x5, &posL4
     18              ADC_Process();
   \   000064   ........     CALLA   #ADC_Process
     19            case MENU2:
     20              display_1 = "Color";
   \                     ??getResistorMenu_1:
   \   000068   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     21              posL1 = LINE_POS_L3;
   \   00006E   F2400300.... MOV.B   #0x3, &posL1
     22              display_3 = "Value";
   \   000074   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     23              posL3 = LINE_POS_L3;
   \   00007A   F2400300.... MOV.B   #0x3, &posL3
     24              display_2 = "Brown";
   \   000080   B240........ MOV.W   #`?<Constant "Brown">`, &display_2
     25              posL2 = LINE_POS_L3;
   \   000086   F2400300.... MOV.B   #0x3, &posL2
     26              display_4 = "1";
   \   00008C   B240........ MOV.W   #`?<Constant "1">`, &display_4
     27              posL4 = LINE_POS_L5;
   \   000092   F2400500.... MOV.B   #0x5, &posL4
     28              ADC_Process();
   \   000098   ........     CALLA   #ADC_Process
     29            case MENU3:
     30              display_1 = "Color";
   \                     ??getResistorMenu_2:
   \   00009C   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     31              posL1 = LINE_POS_L3;
   \   0000A2   F2400300.... MOV.B   #0x3, &posL1
     32              display_3 = "Value";
   \   0000A8   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     33              posL3 = LINE_POS_L3;
   \   0000AE   F2400300.... MOV.B   #0x3, &posL3
     34              display_2 = "Red";
   \   0000B4   B240........ MOV.W   #`?<Constant "Red">`, &display_2
     35              posL2 = LINE_POS_L4;
   \   0000BA   E242....     MOV.B   #0x4, &posL2
     36              display_4 = "2";
   \   0000BE   B240........ MOV.W   #`?<Constant "2">`, &display_4
     37              posL4 = LINE_POS_L5;
   \   0000C4   F2400500.... MOV.B   #0x5, &posL4
     38              ADC_Process();
   \   0000CA   ........     CALLA   #ADC_Process
     39            case MENU4:
     40              display_1 = "Color";
   \                     ??getResistorMenu_3:
   \   0000CE   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     41              posL1 = LINE_POS_L3;
   \   0000D4   F2400300.... MOV.B   #0x3, &posL1
     42              display_3 = "Value";
   \   0000DA   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     43              posL3 = LINE_POS_L3;
   \   0000E0   F2400300.... MOV.B   #0x3, &posL3
     44              display_2 = "Orange";
   \   0000E6   B240........ MOV.W   #`?<Constant "Orange">`, &display_2
     45              posL2 = LINE_POS_L2;
   \   0000EC   E243....     MOV.B   #0x2, &posL2
     46              display_4 = "3";
   \   0000F0   B240........ MOV.W   #`?<Constant "3">`, &display_4
     47              posL4 = LINE_POS_L5;
   \   0000F6   F2400500.... MOV.B   #0x5, &posL4
     48              ADC_Process();
   \   0000FC   ........     CALLA   #ADC_Process
     49            case MENU5:
     50              display_1 = "Color";
   \                     ??getResistorMenu_4:
   \   000100   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     51              posL1 = LINE_POS_L3;
   \   000106   F2400300.... MOV.B   #0x3, &posL1
     52              display_3 = "Value";
   \   00010C   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     53              posL3 = LINE_POS_L3;
   \   000112   F2400300.... MOV.B   #0x3, &posL3
     54              display_2 = "Yellow";
   \   000118   B240........ MOV.W   #`?<Constant "Yellow">`, &display_2
     55              posL2 = LINE_POS_L2;
   \   00011E   E243....     MOV.B   #0x2, &posL2
     56              display_4 = "4";
   \   000122   B240........ MOV.W   #`?<Constant "4">`, &display_4
     57              posL4 = LINE_POS_L5;
   \   000128   F2400500.... MOV.B   #0x5, &posL4
     58              ADC_Process();
   \   00012E   ........     CALLA   #ADC_Process
     59            case MENU6:
     60              display_1 = "Color";
   \                     ??getResistorMenu_5:
   \   000132   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     61              posL1 = LINE_POS_L3;
   \   000138   F2400300.... MOV.B   #0x3, &posL1
     62              display_3 = "Value";
   \   00013E   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     63              posL3 = LINE_POS_L3;
   \   000144   F2400300.... MOV.B   #0x3, &posL3
     64              display_2 = "Green";
   \   00014A   B240........ MOV.W   #`?<Constant "Green">`, &display_2
     65              posL2 = LINE_POS_L3;
   \   000150   F2400300.... MOV.B   #0x3, &posL2
     66              display_4 = "5";
   \   000156   B240........ MOV.W   #`?<Constant "5">`, &display_4
     67              posL4 = LINE_POS_L5;
   \   00015C   F2400500.... MOV.B   #0x5, &posL4
     68              ADC_Process();
   \   000162   ........     CALLA   #ADC_Process
     69            case MENU7:
     70              display_1 = "Color";
   \                     ??getResistorMenu_6:
   \   000166   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     71              posL1 = LINE_POS_L3;
   \   00016C   F2400300.... MOV.B   #0x3, &posL1
     72              display_3 = "Value";
   \   000172   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     73              posL3 = LINE_POS_L3;
   \   000178   F2400300.... MOV.B   #0x3, &posL3
     74              display_2 = "Blue";
   \   00017E   B240........ MOV.W   #`?<Constant "Blue">`, &display_2
     75              posL2 = LINE_POS_L3;
   \   000184   F2400300.... MOV.B   #0x3, &posL2
     76              display_4 = "6";
   \   00018A   B240........ MOV.W   #`?<Constant "6">`, &display_4
     77              posL4 = LINE_POS_L5;
   \   000190   F2400500.... MOV.B   #0x5, &posL4
     78              ADC_Process();
   \   000196   ........     CALLA   #ADC_Process
     79            case MENU8:
     80              display_1 = "Color";
   \                     ??getResistorMenu_7:
   \   00019A   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     81              posL1 = LINE_POS_L3;
   \   0001A0   F2400300.... MOV.B   #0x3, &posL1
     82              display_3 = "Value";
   \   0001A6   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     83              posL3 = LINE_POS_L3;
   \   0001AC   F2400300.... MOV.B   #0x3, &posL3
     84              display_2 = "Violet";
   \   0001B2   B240........ MOV.W   #`?<Constant "Violet">`, &display_2
     85              posL2 = LINE_POS_L2;
   \   0001B8   E243....     MOV.B   #0x2, &posL2
     86              display_4 = "7";
   \   0001BC   B240........ MOV.W   #`?<Constant "7">`, &display_4
     87              posL4 = LINE_POS_L5;
   \   0001C2   F2400500.... MOV.B   #0x5, &posL4
     88              ADC_Process();
   \   0001C8   ........     CALLA   #ADC_Process
     89            case MENU9:
     90              display_1 = "Color";
   \                     ??getResistorMenu_8:
   \   0001CC   B240........ MOV.W   #`?<Constant "Color">`, &display_1
     91              posL1 = LINE_POS_L3;
   \   0001D2   F2400300.... MOV.B   #0x3, &posL1
     92              display_3 = "Value";
   \   0001D8   B240........ MOV.W   #`?<Constant "Value">`, &display_3
     93              posL3 = LINE_POS_L3;
   \   0001DE   F2400300.... MOV.B   #0x3, &posL3
     94              display_2 = "Gray";
   \   0001E4   B240........ MOV.W   #`?<Constant "Gray">`, &display_2
     95              posL2 = LINE_POS_L3;
   \   0001EA   F2400300.... MOV.B   #0x3, &posL2
     96              display_4 = "8";
   \   0001F0   B240........ MOV.W   #`?<Constant "8">`, &display_4
     97              posL4 = LINE_POS_L5;
   \   0001F6   F2400500.... MOV.B   #0x5, &posL4
     98              ADC_Process();
   \   0001FC   ........     CALLA   #ADC_Process
     99            case MENU10:
    100              display_1 = "Color";
   \                     ??getResistorMenu_9:
   \   000200   B240........ MOV.W   #`?<Constant "Color">`, &display_1
    101              posL1 = LINE_POS_L3;
   \   000206   F2400300.... MOV.B   #0x3, &posL1
    102              display_3 = "Value";
   \   00020C   B240........ MOV.W   #`?<Constant "Value">`, &display_3
    103              posL3 = LINE_POS_L3;
   \   000212   F2400300.... MOV.B   #0x3, &posL3
    104              display_2 = "White";
   \   000218   B240........ MOV.W   #`?<Constant "White">`, &display_2
    105              posL2 = LINE_POS_L3;
   \   00021E   F2400300.... MOV.B   #0x3, &posL2
    106              display_4 = "9";
   \   000224   B240........ MOV.W   #`?<Constant "9">`, &display_4
    107              posL4 = LINE_POS_L5;
   \   00022A   F2400500.... MOV.B   #0x5, &posL4
    108              ADC_Process();
   \   000230   ........     CALLA   #ADC_Process
    109              
    110            default: break;
    111            }
    112          }
   \                     ??getResistorMenu_10:
   \   000234   3A41         POP.W   R10
   \   000236   1001         RETA

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Color">`:
   \   000000   436F6C6F7200 DC8 "Color"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Value">`:
   \   000000   56616C756500 DC8 "Value"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Black">`:
   \   000000   426C61636B00 DC8 "Black"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "0">`:
   \   000000   3000         DC8 "0"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Brown">`:
   \   000000   42726F776E00 DC8 "Brown"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "1">`:
   \   000000   3100         DC8 "1"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Red">`:
   \   000000   52656400     DC8 "Red"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "2">`:
   \   000000   3200         DC8 "2"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Orange">`:
   \   000000   4F72616E6765 DC8 "Orange"
   \            00          

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "3">`:
   \   000000   3300         DC8 "3"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Yellow">`:
   \   000000   59656C6C6F77 DC8 "Yellow"
   \            00          

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "4">`:
   \   000000   3400         DC8 "4"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Green">`:
   \   000000   477265656E00 DC8 "Green"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "5">`:
   \   000000   3500         DC8 "5"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Blue">`:
   \   000000   426C756500   DC8 "Blue"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "6">`:
   \   000000   3600         DC8 "6"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Violet">`:
   \   000000   56696F6C6574 DC8 "Violet"
   \            00          

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "7">`:
   \   000000   3700         DC8 "7"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Gray">`:
   \   000000   4772617900   DC8 "Gray"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "8">`:
   \   000000   3800         DC8 "8"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "White">`:
   \   000000   576869746500 DC8 "White"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "9">`:
   \   000000   3900         DC8 "9"

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      6   getResistorMenu
        6   -> ADC_Process


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant "0">
       2  ?<Constant "1">
       2  ?<Constant "2">
       2  ?<Constant "3">
       2  ?<Constant "4">
       2  ?<Constant "5">
       2  ?<Constant "6">
       2  ?<Constant "7">
       2  ?<Constant "8">
       2  ?<Constant "9">
       6  ?<Constant "Black">
       5  ?<Constant "Blue">
       6  ?<Constant "Brown">
       6  ?<Constant "Color">
       5  ?<Constant "Gray">
       6  ?<Constant "Green">
       7  ?<Constant "Orange">
       4  ?<Constant "Red">
       6  ?<Constant "Value">
       7  ?<Constant "Violet">
       6  ?<Constant "White">
       7  ?<Constant "Yellow">
     568  getResistorMenu

 
 568 bytes in segment CODE
  91 bytes in segment DATA16_C
 
 568 bytes of CODE  memory
  91 bytes of CONST memory

Errors: none
Warnings: none
