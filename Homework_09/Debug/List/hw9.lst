###############################################################################
#
# IAR C/C++ Compiler V6.30.2.940/W32 for MSP430           13/Nov/2015  15:27:17
# Copyright 1996-2015 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 6.30
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        \\vmware-host\Shared Folders\Desktop\ECE306Code\Homework_09\hw9.c
#    Command line  =  
#        "\\vmware-host\Shared Folders\Desktop\ECE306Code\Homework_09\hw9.c"
#        -lC "\\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\List\" -o
#        "\\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\Obj\" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5739__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 7.2\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large
#    List file     =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\List\hw9.lst
#    Object file   =  
#        \\vmware-host\Shared
#        Folders\Desktop\ECE306Code\Homework_09\Debug\Obj\hw9.r43
#
###############################################################################

\\vmware-host\Shared Folders\Desktop\ECE306Code\Homework_09\hw9.c
      1          // Includes
      2          #include  "macros.h"
      3          #include  "msp430.h"
      4          #include  "functions.h"
      5          

   \                                 In  segment CODE, align 2
      6          void getResistorMenu(unsigned int adc_value){
   \                     getResistorMenu:
      7            adc_value = adc_value >> 6; // shift 10 bit value by 6 bits
   \   000000                RPT     #0x6
   \   000000   45190C10     RRUX.W  R12
      8            switch(adc_value){
   \   000004   1C93         CMP.W   #0x1, R12
   \   000006   0C20         JNE     ??getResistorMenu_0
      9            case MENU1:
     10                display_2 = "Black";
   \   000008   B240........ MOV.W   #`?<Constant "Black">`, &display_2
     11                posL2 = LINE_POS_L3;
   \   00000E   F2400300.... MOV.B   #0x3, &posL2
     12                display_4 = "0";
   \   000014   B240........ MOV.W   #`?<Constant "0">`, &display_4
     13                posL4 = LINE_POS_L5;
   \   00001A   F2400500.... MOV.B   #0x5, &posL4
     14            }
     15          }
   \                     ??getResistorMenu_0:
   \   000020   1001         RETA

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "Black">`:
   \   000000   426C61636B00 DC8 "Black"

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "0">`:
   \   000000   3000         DC8 "0"

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   getResistorMenu


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant "0">
       6  ?<Constant "Black">
      34  getResistorMenu

 
 34 bytes in segment CODE
  8 bytes in segment DATA16_C
 
 34 bytes of CODE  memory
  8 bytes of CONST memory

Errors: none
Warnings: none
